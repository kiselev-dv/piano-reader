{"version":3,"sources":["components/PianoKeyboard.js","components/MidiSelector.js","util/ClassesGenerator.js","components/Lessons.js","util/CustomEvent.js","util/Notes.js","components/Stave.js","util/NotesMatcher.js","util/GameStatistics.js","components/Game.js","index.js"],"names":["PianoKeyboard","props","firstNote","MidiNumbers","fromNote","lastNote","keyboardShortcuts","KeyboardShortcuts","create","keyboardConfig","HOME_ROW","className","noteRange","first","last","playNote","stopNote","width","keyWidthToHeight","activeNotes","MidiSelector","state","value","options","navigator","requestMIDIAccess","then","gainAccess","bind","handleChange","connect","access","this","setInputs","inputs","self","onstatechange","e","console","log","port","name","manufacturer","values","input","push","key","id","text","setState","onConnect","getSelectedInput","event","target","items","forEach","opt","defaultValue","onChange","disabled","createSelectItems","onClick","React","Component","generateOneClefClasses","task","clef","split","map","abc","system","COURSES","heder","subtitle","generator","Lessons","lesson","renderLesson","onSelect","index","handleClick","lessons","renderLessons","CEvent","listeners","listener","indexOf","splice","data","l","NOTES","activeNotesAsABC","notes","chord","activeAbc","n","octave","char","toLowerCase","repeat","midi2ABC","NotesState","stateChangeEvent","Event","note","fire","msg","command","addNote","removeNote","off","activeVoice","voices","grandStave","length","some","v","trebleVoice","find","bassVoice","voice","activeABC","activeTreble","trebleLine","activeBase","bassLine","line","jsx","abcNotation","parserParams","engraverParams","responsive","add_classes","renderParams","viewportHorizontal","renderABC","style","whiteSpace","ABC_NOTE_REGEXP","lesson2Notes","noteNumbers","concat","matchAll","m","splitABC","sharp","flat","match","isLowercase","octaveUp","octaveDown","number","abc2MIDI","NotesMatcher","lessonNoteNumbers","matched","GameStatistics","matcher","accumulator","hitEvent","missEvent","isNotEmpty","addActiveNotes","array","bindLast","fn","that","args","callArgs","call","Game","on","handleActiveNotes","_hit","_miss","showStaveABC","stat","hit","miss","onmidimessage","handleMidiMessage","course","setTimeout","Math","floor","random","reset","handleMidiConnect","type","checked","handleCourseChange","Stave","handleKeyboard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16a15f6d.chunk.js","sourcesContent":["import React from 'react';\nimport { Piano, KeyboardShortcuts, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\n\nexport default function PianoKeyboard(props) {\n\n    // 61 key keyboard\n    const firstNote = MidiNumbers.fromNote('c2');\n    const lastNote = MidiNumbers.fromNote('c7');\n    const keyboardShortcuts = KeyboardShortcuts.create({\n        firstNote: MidiNumbers.fromNote('c4'),\n        lastNote: lastNote,\n        keyboardConfig: KeyboardShortcuts.HOME_ROW,\n    });\n\n    return (\n        <div className=\"piano-container\">\n            <Piano className=\"test\"\n                noteRange={{ first: firstNote, last: lastNote }}\n                playNote={props.playNote}\n                stopNote={props.stopNote}\n                width={props.width}\n                keyWidthToHeight={0.2}\n                keyboardShortcuts={keyboardShortcuts}\n                activeNotes={props.activeNotes}\n            />\n        </div>\n    );\n}","import React from 'react';\n\nclass MidiSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: null,\n            options: []\n        };\n\n        navigator.requestMIDIAccess().then(this.gainAccess.bind(this));\n        this.handleChange = this.handleChange.bind(this);\n        this.connect = this.connect.bind(this);\n    }\n\n    gainAccess(access) {\n        this.setInputs(access.inputs);\n        const self = this;\n        access.onstatechange = function(e) {\n            console.log(e.port.name, e.port.manufacturer, e.port.state);\n            self.setInputs(access.inputs);\n        };\n    }\n\n    setInputs(inputs) {\n        this.inputs = inputs;\n\n        const options = [];\n        for (let input of inputs.values()) {\n            options.push({\n                key: input.id,\n                value: input.id,\n                text: input.name\n            });\n        }\n\n        this.setState({options});\n    }\n\n    connect() {\n        this.props.onConnect(this.getSelectedInput());\n    }\n\n    getSelectedInput() {\n        for(let input of this.inputs.values()) {\n            if(input.id === this.state.value) {\n                return input;\n            }\n        }\n        return null;\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    createSelectItems() {\n        let items = [];\n        this.state.options.forEach(opt => {\n            items.push(<option key={opt.key} value={opt.value}>{opt.text}</option>);\n        });\n        return items;\n    }\n\n    render() {\n        return (\n            <div>\n                <select defaultValue=\"label\" onChange={this.handleChange}>\n                    <option value=\"label\" disabled>Select midi device</option>\n                    {this.createSelectItems()}\n                </select>\n                <button onClick={this.connect}>Connect</button>\n            </div>\n        )\n    }\n\n}\n\nexport default MidiSelector;","export function generateOneClefClasses(task, clef) {\n    return task.split(' ').map(abc => {\n        return {\n            system: [{clef: clef || 'treble', abc: abc}]\n        }\n    });\n}","import React from 'react';\nimport './Lessons.css'\nimport {generateOneClefClasses} from '../util/ClassesGenerator'\n\nconst COURSES = [{\n    heder: \"Treble clef\",\n    subtitle: \"(Only markers)\",\n    generator: generateOneClefClasses.bind(null, \"C G c g c' G,\")\n}, {\n    heder: \"Bass clef\",\n    subtitle: \"(Only markers)\",\n    generator: generateOneClefClasses.bind(null, \"C,, F,, C, F, C F c\", 'bass')\n}];\n\nexport {COURSES};\n\nexport default class Lessons extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lesson: props.lesson\n        };\n\n        this.renderLesson = this.renderLesson.bind(this);\n    }\n\n    handleClick(lesson) {\n        this.setState({lesson});\n        this.props.onSelect && this.props.onSelect(lesson);\n    }\n\n    renderLesson(lesson, index) {\n        let className = 'lesson';\n        if (this.state.lesson === lesson) {\n            className += ' selected';\n        }\n        return (\n            <div key={index} className={className}\n                onClick={this.handleClick.bind(this, lesson)}>\n\n                <div className=\"wrapper\">\n                    <h4>{lesson.heder}</h4>\n                    <div>{lesson.subtitle}</div>\n                </div>\n            </div>\n        );\n    }\n\n    renderLessons(lessons) {\n        return lessons.map(this.renderLesson);\n    }\n\n    render() {\n        return (\n            <div className=\"lessons\">\n                {this.renderLessons(this.props.lessons)}\n            </div>\n        );\n    }\n\n}","export default class CEvent {\n    constructor() {\n        this.listeners = [];\n    }\n\n    on(listener) {\n        this.listeners.push(listener);\n    }\n\n    off(listener) {\n        const index = this.listeners.indexOf(listener);\n        if (index > -1) {\n            this.listeners.splice(index, 1);\n        }\n    }\n\n    fire(...data) {\n        this.listeners.forEach(l => l(...data));\n    }\n};","import Event from './CustomEvent';\n\nconst NOTES = ['C', '^C', 'D', '^D', 'E', 'F', '^F', 'G', '^G', 'A', '^A', 'B'];\n\nexport function midi2ABC(key) {\n    const octave = (key / 12 | 0) - 5;\n    const note = key % 12;\n\n    const char = NOTES[note];\n\n    if (octave === 0) {\n        return char;\n    }\n    if (octave === 1) {\n        return char.toLowerCase();\n    }\n    if (octave > 1) {\n        return char.toLowerCase() + \"'\".repeat(octave - 1);\n    }\n    if (octave < 0) {\n        return char + \",\".repeat(octave * -1);\n    }\n\n    return null;\n}\n\nexport function activeNotesAsABC(notes, chord) {\n    let activeAbc = \"\";\n\n    if (notes) {\n        notes.forEach(n => {\n            activeAbc += midi2ABC(n);\n        });\n    }\n\n    if (activeAbc && chord) {\n        activeAbc = '[' + activeAbc + ']';\n    }\n\n    return activeAbc;\n}\n\nexport default class NotesState {\n    constructor() {\n        this.activeNotes = [];\n        this.stateChangeEvent = new Event();\n    }\n\n    addNote(note) {\n        const index = this.activeNotes.indexOf(note);\n        if (index < 0) {\n            this.activeNotes.push(note);\n        }\n\n        this.stateChangeEvent.fire(this.activeNotes);\n    }\n\n    removeNote(note) {\n        const index = this.activeNotes.indexOf(note);\n        if (index > -1) {\n            this.activeNotes.splice(index, 1);\n        }\n\n        this.stateChangeEvent.fire(this.activeNotes);\n    }\n\n    handleMidiMessage(msg) {\n        const data = msg.data;\n\n        const command = data[0];\n        const note = data[1];\n        // const velocity = (data.length > 2) ? data[2] : 0;\n\n        if (command === 144) {\n            this.addNote(note);\n        }\n\n        if (command === 128) {\n            this.removeNote(note);\n        }\n    }\n\n    handleKeyboard(note, off) {\n        if (!off) {\n            this.addNote(note);\n        }\n        else {\n            this.removeNote(note);\n        }\n    }\n}","import React from 'react';\nimport Abcjs from 'react-abcjs';\n\nimport {activeNotesAsABC} from '../util/Notes'\n\nfunction isDoubleVoices(voices) {\n    return voices.some(v => v.clef === 'bass')\n        && voices.some(v => (v.clef || 'treble') === 'treble' )\n}\n\nexport default function(props) {\n\n    let abc;\n    let activeVoice;\n\n    const {\n        key,\n        system\n    } = props;\n\n    let {clef, grandStave} = props;\n    if (!clef && system.length === 1) {\n        clef = system[0].clef || 'treble';\n    }\n\n    const bothClefs = isDoubleVoices(system);\n\n    if (bothClefs) {\n        grandStave = true;\n    }\n\n    const trebleVoice = system.find( v => (v.clef || clef) === 'treble' );\n    const bassVoice = system.find( v => (v.clef || clef) === 'bass' );\n    const voice = (trebleVoice || bassVoice);\n\n    let activeAbc = props.activeABC || activeNotesAsABC(props.activeNotes);\n\n    if (grandStave) {\n        const activeTreble = clef === 'bass' ? '' : activeAbc;\n        let trebleLine = trebleVoice ? trebleVoice.abc : '';\n        if (trebleVoice && activeTreble) {\n            trebleLine += '&';\n            activeVoice = 1;\n        }\n        trebleLine += activeTreble;\n\n        const activeBase = clef === 'bass' ? activeAbc : '';\n        let bassLine = bassVoice ? bassVoice.abc : '';\n        if (bassVoice && activeBase) {\n            bassLine += '&';\n            activeVoice = 2;\n        }\n        bassLine += activeBase;\n\n        if (!activeAbc) {\n            // Add empty overlay chord to have consistent placing\n            // of elements, otherwise left padding changes,\n            // when you have active notes\n            bassLine += \" & []\"\n        }\n\n        abc = `\n            K: ${key || ''} clef=${clef || 'treble'}\n            L:1/4\n            M:4/4\n            %%staves {V1 V2}\n            V: V1 clef=treble\n            V: V2 clef=bass\n            [V: V1]|| ${trebleLine}\n            [V: V2]|| ${bassLine}\n        `;\n    }\n    else {\n        let line = voice ? voice.abc : '';\n        if (line && activeAbc) {\n            line += '&';\n            activeVoice = 1;\n        }\n        line += activeAbc;\n\n        if(!activeAbc) {\n            line += ' & []';\n        }\n\n        abc = `\n            K: ${key || ''} clef=${clef || 'treble'}\n            L:1/4\n            M:4/4\n            || [${line}]\n        `;\n    }\n\n    return (\n        <div className=\"stave-container\">\n            <style jsx=\"true\">{`\n                path.abcjs-note.abcjs-v${activeVoice} {\n                    fill: #3AC8DA;\n                }\n            `}\n            </style>\n            <Abcjs\n                abcNotation={abc}\n                parserParams={{}}\n                engraverParams={{ responsive: 'none', add_classes: true }}\n                renderParams={{ viewportHorizontal: true }}\n            />\n            { props.renderABC && (<div style={{whiteSpace: 'pre'}}>{abc}</div>)}\n        </div>\n    )\n}\n\n","\nconst ABC_NOTE_REGEXP = /([_^]?[abcdefgABCDEFG]{1}[,']*)/g;\n\nexport function abc2MIDI(abc) {\n    const sharp = (abc.indexOf('^') > -1);\n    const flat  = (abc.indexOf('_') > -1);\n\n    const note = abc.match(/[ABCDEFGabcdefg]/)[0];\n    const isLowercase = note.toLowerCase() === note;\n\n    const octaveUp   = abc.match(/[']+/) ? abc.match(/[']+/)[0].length : 0;\n    const octaveDown = abc.match(/[,]+/) ? abc.match(/[,]+/)[0].length : 0;\n\n    let number = ['c', 'c', 'd', 'd', 'e', 'f', 'f', 'g', 'g', 'a', 'a', 'b'].indexOf(note.toLowerCase());\n\n    if (sharp) {\n        number ++;\n    }\n\n    if (flat) {\n        number ++;\n    }\n\n    if (isLowercase) {\n        number += 12;\n    }\n\n    number += 12 * octaveUp;\n    number -= 12 * octaveDown;\n\n    number += 12 * 5;\n\n    return number;\n}\n\nexport function lesson2Notes(lesson) {\n    let noteNumbers = [];\n\n    if(lesson) {\n        lesson.forEach(line => {\n            noteNumbers = noteNumbers.concat(abc2Notes(line.abc));\n        });\n    }\n\n    return noteNumbers;\n}\n\nexport function splitABC(abc) {\n    return [...abc.matchAll(ABC_NOTE_REGEXP)].map(m => m[0]);\n}\n\nexport function abc2Notes(abc) {\n    return splitABC(abc).map(n => abc2MIDI(n));\n}\n\nexport default class NotesMatcher {\n    constructor(lesson) {\n        this.lesson = lesson;\n        this.lessonNoteNumbers = lesson2Notes(this.lesson);\n    }\n\n    reset(lesson) {\n        this.lesson = lesson;\n        this.lessonNoteNumbers = lesson2Notes(this.lesson);\n    }\n\n    match(activeNotes) {\n        let matched = [];\n\n        // All active ntes are in lesson notes\n        for (let n of activeNotes) {\n            if(this.lessonNoteNumbers.indexOf(n) >= 0) {\n                matched.push(n);\n            }\n        }\n\n        // All notes are matched\n        return matched.length === activeNotes.length && matched.length === this.lessonNoteNumbers.length;\n    }\n}","import CEvent from './CustomEvent'\n\nexport default class GameStatistics {\n    constructor(matcher) {\n        this.matcher = matcher;\n        this.accumulator = [];\n\n        this.hitEvent = new CEvent();\n        this.missEvent = new CEvent();\n    }\n\n    handleActiveNotes(activeNotes) {\n        if(this.matcher.match(activeNotes)) {\n            this.hitEvent.fire();\n        }\n\n        if(isNotEmpty(activeNotes)) {\n            this.addActiveNotes(activeNotes);\n        }\n        else {\n            if (isNotEmpty(this.accumulator)) {\n                this.missEvent.fire();\n                console.log(activeNotes, this.accumulator);\n            }\n            this.accumulator = [];\n        }\n    }\n\n    addActiveNotes(activeNotes) {\n        activeNotes.forEach(n => {\n            if(this.accumulator.indexOf(n) < 0) {\n                this.accumulator.push(n);\n            }\n        }, this);\n    }\n}\n\nfunction isEmpty(array) {\n    return array && array.length === 0;\n}\n\nfunction isNotEmpty(array) {\n    return !array || array.length === 0;\n}","import React from 'react'\n\nimport PianoKeyboard from './PianoKeyboard';\nimport MidiSelector from './MidiSelector';\nimport Lessons, {COURSES} from './Lessons'\nimport Stave from './Stave'\n\nimport NotesState, {activeNotesAsABC} from '../util/Notes'\nimport NotesMatcher from '../util/NotesMatcher'\nimport GameStatistics from '../util/GameStatistics'\n\nfunction bindLast(fn, that, ...args) {\n    return function(...callArgs) {\n        fn.call(that, ...callArgs, ...args);\n    }\n}\n\nfunction sampleArray(array) {\n    return array[Math.floor(Math.random() * array.length)];\n}\n\nexport default class Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.notes = new NotesState();\n        this.notes.stateChangeEvent.on(this.handleActiveNotes.bind(this));\n\n        const lessons = COURSES[0].generator();\n\n        this._hit = 0;\n        this._miss = 0;\n\n        this.state = {\n            activeNotes: [],\n            activeABC: '',\n            lesson: lessons[0],\n            lessons: lessons,\n            showStaveABC: false\n        };\n\n        this.matcher = new NotesMatcher(this.state.lesson.system);\n        this.stat = new GameStatistics(this.matcher);\n\n        this.stat.hitEvent.on(this.hit.bind(this));\n        this.stat.missEvent.on(this.miss.bind(this));\n    }\n\n    handleActiveNotes(activeNotes) {\n        const activeABC = activeNotesAsABC(activeNotes, true)\n        this.setState({\n            activeNotes: activeNotes,\n            activeABC: activeABC\n        });\n\n        this.stat.handleActiveNotes(activeNotes);\n    }\n\n    handleMidiConnect(input) {\n        const notes = this.notes;\n        input.onmidimessage = notes.handleMidiMessage.bind(notes);\n    }\n\n    handleCourseChange(course) {\n        const lessons = course.generator();\n        const state = {\n            lesson: lessons[0],\n            lessons: lessons\n        };\n        this.setState(state);\n\n        this._hit = 0;\n        this._miss = 0;\n    }\n\n    hit() {\n        this._hit ++;\n\n        setTimeout(() => {\n            const lesson = sampleArray(this.state.lessons);\n            this.setState({lesson});\n            this.matcher.reset(lesson.system);\n        }, 300);\n    }\n\n    miss() {\n        this._miss ++;\n    }\n\n    render() {\n        return (\n            <div id=\"game\">\n                <MidiSelector onConnect={this.handleMidiConnect.bind(this)}/>\n                <div>\n                    Hit: {this._hit}, Miss: {this._miss},\n                    &nbsp;<input\n                        type=\"checkbox\"\n                        onChange={e => {this.setState({showStaveABC:e.target.checked});}}></input>\n                    &nbsp;<label>Show stave ABC</label>\n                </div>\n                <Lessons lesson={COURSES[0]} lessons={COURSES}\n                    onSelect={this.handleCourseChange.bind(this)} />\n                <Stave\n                    activeABC={this.state.activeABC}\n                    grandStave={false}\n                    system={this.state.lesson.system}\n                    renderABC={this.state.showStaveABC}/>\n                <PianoKeyboard width={1600}\n                    activeNotes={this.state.activeNotes}\n                    playNote={bindLast(this.notes.handleKeyboard, this.notes, false)}\n                    stopNote={bindLast(this.notes.handleKeyboard, this.notes, true)}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport Game from './components/Game'\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}